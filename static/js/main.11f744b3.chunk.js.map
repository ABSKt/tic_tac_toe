{"version":3,"sources":["square.js","board.js","game.js","index.js"],"names":["Square","className","onClick","props","this","value","React","Component","Board","i","squares","renderSquare","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"8MAgBeA,E,uKAXF,IAAD,OACJ,OACI,4BACEC,UAAU,SACVC,QAAU,kBAAM,EAAKC,MAAMD,YACxBE,KAAKD,MAAME,W,GAPNC,IAAMC,WCAPC,E,2KAEJC,GAAI,IAAD,OACZ,OACG,kBAAC,EAAD,CACCJ,MAASD,KAAKD,MAAMO,QAAQD,GAC5BP,QAAS,kBAAM,EAAKC,MAAMD,QAAQO,Q,+BAMtC,OACE,6BACE,yBAAKR,UAAU,aACZG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKV,UAAU,aACZG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKV,UAAU,aACZG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GA3BEL,IAAMC,WCApBK,E,kDACjB,WAAYT,GAAO,IAAD,8BACd,cAAMA,IACDU,MAAQ,CACTC,QAAS,CAAC,CACNJ,QAASK,MAAM,GAAGC,KAAK,QAE3BC,WAAY,EACZC,SAAS,GAPC,E,wDAWNT,GACR,IAAMK,EAAUV,KAAKS,MAAMC,QAAQK,MAAM,EAAGf,KAAKS,MAAMI,WAAa,GAE9DP,EADUI,EAAQA,EAAQM,OAAQ,GAChBV,QAAQS,QAC7BE,EAAgBX,IAAYA,EAAQD,KAGvCC,EAAQD,GAAKL,KAAKS,MAAMK,QAAU,IAAM,IACxCd,KAAKkB,SAAS,CACVR,QAASA,EAAQS,OAAO,CAAC,CACrBb,QAAQA,KAEZO,WAAYH,EAAQM,OACpBF,SAAUd,KAAKS,MAAMK,a,6BAItBM,GACHpB,KAAKkB,SAAS,CACZL,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,+BAIpB,IAcFC,EAdC,OACCX,EAAUV,KAAKS,MAAMC,QACrBY,EAAUZ,EAAQV,KAAKS,MAAMI,YAC7BU,EAASN,EAAgBK,EAAQhB,SACjCkB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,wBAAIE,IAAKF,GACP,4BAAQ5B,QAAS,kBAAM,EAAK+B,OAAOH,KAAQC,OAcnD,OAREN,EADEE,EACO,WAAaA,EACe,IAA7BvB,KAAKS,MAAMC,QAAQM,OAClB,OAGA,iBAAmBhB,KAAKS,MAAMK,QAAU,IAAM,KAIvD,yBAAKjB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACES,QAASgB,EAAQhB,QACjBR,QAAS,SAACO,GAAD,OAAO,EAAKyB,YAAYzB,OAGrC,yBAAKR,UAAU,aACb,6BAAK,4BAAMwB,IACX,4BAAI,4BAAMG,EAAN,Y,GAtEgBtB,IAAMC,WA6ExC,SAASc,EAAgBX,GAWrB,IAVA,IAAMyB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA1B,EAAI,EAAGA,EAAI0B,EAAMf,OAAQX,IAAK,CAAC,IAAD,cACnB0B,EAAM1B,GADa,GAC9B2B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI5B,EAAQ0B,IAAM1B,EAAQ0B,KAAO1B,EAAQ2B,IAAM3B,EAAQ0B,KAAO1B,EAAQ4B,GACpE,OAAO5B,EAAQ0B,GAGnB,OAAO,K,MC7FXG,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.11f744b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n class Square extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <button \r\n              className=\"square\" \r\n              onClick= {() => this.props.onClick()}>\r\n                {this.props.value}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Square from \"./square\";\r\nexport default class Board extends React.Component{\r\n    \r\n    renderSquare(i) {\r\n        return (\r\n           <Square \r\n            value = {this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n            />\r\n            );\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(0)}\r\n              {this.renderSquare(1)}\r\n              {this.renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(3)}\r\n              {this.renderSquare(4)}\r\n              {this.renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(6)}\r\n              {this.renderSquare(7)}\r\n              {this.renderSquare(8)}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Board from \"./board\"\r\nexport default class Game extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length -1];\r\n        const squares = current.squares.slice();\r\n        if(calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : '0';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares:squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n          stepNumber: step,\r\n          xIsNext: (step % 2) === 0,\r\n        });\r\n      }\r\n      \r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n              'Go to move #' + move :\r\n              'Go to game start';\r\n            return (\r\n              <li key={move}>\r\n                <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n              </li>\r\n            );\r\n          });\r\n        let status;\r\n        if (winner) {\r\n          status = 'Winner: ' + winner;\r\n        } else if(this.state.history.length == 10){\r\n          status = \"DRAW\"\r\n        }\r\n        else {\r\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n          <div className=\"game\">\r\n            <div className=\"game-board\">\r\n              <Board \r\n                squares={current.squares}\r\n                onClick={(i) => this.handleClick(i)}\r\n              />\r\n            </div>\r\n            <div className=\"game-info\">\r\n              <div><h2>{ status }</h2></div>\r\n              <ol><h2>{ moves } </h2></ol>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './game';\nimport './mycss.css'\nReactDOM.render(\n    <Game />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}